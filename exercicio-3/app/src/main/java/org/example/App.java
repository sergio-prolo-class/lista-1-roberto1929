/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;
import java.util.Random;

public class App {

    public static void main(String[] args) {

        char[][] tabuleiro = new char[10][10];
        inicializar_tabuleiro(tabuleiro);
     //aqui se posiciona os navios com os seus tamanhos e simbolos
        posicionar_navio_tabuleiro(tabuleiro, 5, 'P');
        posicionar_navio_tabuleiro(tabuleiro, 4, 'E');
        posicionar_navio_tabuleiro(tabuleiro, 3, 'C');
        posicionar_navio_tabuleiro(tabuleiro, 3, 'S');
        posicionar_navio_tabuleiro(tabuleiro, 2, 'N');

        imprimir_tabuleiro(tabuleiro);

    }
    // função feita para posicionar um navio com seu tamanho e simbolo no tabuleiro
    public static void posicionar_navio_tabuleiro(char[][] tabuleiro, int tamanho, char simbolo) {
        Random rand = new Random();
        boolean posicionado = false;

        while (!posicionado) { //este loop roda atpe encontrar uma posicao valida pra um navio
            boolean vertical = rand.nextBoolean();
            int linha = rand.nextInt(10);
            int coluna = rand.nextInt(10);

            if (pode_inserir(tabuleiro, linha, coluna, tamanho, vertical)) {
                for (int i = 0; i < tamanho; i++) {
                    if (vertical)
                        tabuleiro[linha + i][coluna] = simbolo;
                    else
                        tabuleiro[linha][coluna + i] = simbolo;
                }
                posicionado = true;
            }
        }
    }
    // Verifica se é possível inserir o navio na posição sem desreipeitar os limites do tabuleiro e sem se sobrepor
    public static boolean pode_inserir(char[][] tabuleiro, int linha, int coluna, int tamanho, boolean vertical) {
        if(vertical) {
            if (linha + tamanho > 10) return false;
            for (int i = 0; i < tamanho; i++) {
                if (tabuleiro[linha + i][coluna] != '.') return false;
            }
        } else {
            if (coluna + tamanho > 10) return false;
            for (int i = 0; i < tamanho; i++) {
                if (tabuleiro[linha][coluna + i] != '.') return false;
            }
        }
        return true;
    }

    // vai inicializar o tabuleiro com pontos
    public static void inicializar_tabuleiro(char[][] tabuleiro) {
        for (int i = 0; i < 10; i++)
            for (int j = 0; j < 10; j++)
                tabuleiro[i][j] = '.';
    }

    // imprime o tabuleiro formatado no terminal
    public static void imprimir_tabuleiro(char[][] tabuleiro) {
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                System.out.print(tabuleiro[i][j] + " ");
            }
            System.out.println();
        }
    }
}


/*
 * This source file was generated by the Gradle 'init' task
 */


package org.example;

import java.util.Scanner;

public class App {
    public static void main(String[] args) {
        char[][] tabuleiro = new char[10][10]; // utilizado da variável char para armazenar o tabuleiro com os navios na matriz 10x10

        // o scanner vai ler a entrada de dados presente no tabuleiro
        Scanner entrada = new Scanner(System.in);
        int l = 0;

        //Verificação de linhas e colunas
        while (entrada.hasNextLine()) {
            String linha = entrada.nextLine();
            String[] posicao = linha.split(" ");
            //Se a quantidade de colunas for diferente de 10, o tabuleiro é inválido
            if (posicao.length != 10) {
                System.out.println("Tabuleiro invalido: linha com número incorreto de colunas.");
                return;
            }

            for (int i = 0; i < 10; i++) {
                char casa = posicao[i].charAt(0);
                tabuleiro[l][i] = casa;
            }

            l++;
        }

        // se o número de linhas for diferente de 10, o tabuleiro é inválido
        if (l != 10) {
            System.out.println("Tabuleiro invalido: numero de linhas incorreto.");
            return;
        }

        // Carreguei novas variaveis de cada tipo de navio para usar contador para cada tipo
        int contP = 0; // Porta-aviões
        int contE = 0; // Encouraçado
        int contC = 0; // Cruzador
        int contS = 0; // Submarino
        int contN = 0; // Contratorpedeiro

        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                char c = tabuleiro[i][j];
                // utilizado if para se há algum char no tabuleiro diferente dos navios conhecidos
                if (c != 'P' && c != 'E' && c != 'C' && c != 'S' && c != 'N' && c != '.') {
                    System.out.println("Tabuleiro invalido: navio desconhecido '" + c + "'.");
                    return;
                }

                // Verifica se o navio é válido e conta a quantidade de cada tipo
                if (c == 'P') {
                    contP++;
                }
                if (c == 'E') {
                    contE++;
                }
                if (c == 'C') {
                    contC++;
                }
                if (c == 'S') {
                    contS++;
                }
                if (c == 'N') {
                    contN++;
                }
            }
        }

        // Inicia a variável cont para verificar se todos os navios conhecidos estão presentes no tabuleiro
        if (contP == 0 || contE == 0 || contC == 0 || contS == 0 || contN == 0) {
            System.out.println("Tabuleiro invalido: um ou mais navios estão ausentes.");
            return;
        }

        if (contP != 5) {
            System.out.println("Tabuleiro invalido: Porta-aviões (P) deve ocupar 5 celulas. Encontrado: " + contP);
            return;
        }
        if (contE != 4) {
            System.out.println("Tabuleiro invalido: Encouraçado (E) deve ocupar 4 celulas. Encontrado: " + contE);
            return;
        }
        if (contC != 3) {
            System.out.println("Tabuleiro invalido: Cruzador (C) deve ocupar 3 celulas. Encontrado: " + contC);
            return;
        }
        if (contS != 3) {
            System.out.println("Tabuleiro invalido: Submarino (S) deve ocupar 3 celulas. Encontrado: " + contS);
            return;
        }
        if (contN != 2) {
            System.out.println("Tabuleiro invalido: Contratorpedeiro (N) deve ocupar 2 celulas. Encontrado: " + contN);
            return;
        }


        // Caso não tenha encontra nenhum dos possíveis erros na validação do tabuleiro, o arquivo é considerado válido
        System.out.println("Tabuleiro valido");
    }
}